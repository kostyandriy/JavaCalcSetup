<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edu.school21.app</groupId>
    <artifactId>SmartCalc</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <javafx.version>19</javafx.version>
        <jmetro.version>11.6.16</jmetro.version>
        <maven.compiler.release>17</maven.compiler.release>
        <client.version>1.0.0</client.version>
        <exec.maven.plugin.version>1.6.0</exec.maven.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jfxtras</groupId>
            <artifactId>jmetro</artifactId>
            <version>${jmetro.version}</version>
            <exclusions>
                <!-- The following exclusions are necessary to override all hard coded dependencies -->
                <!-- on outdated or not needed external libaries -->
                <exclusion>
                    <groupId>org.controlsfx</groupId>
                    <artifactId>controlsfx</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*xml</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jcc-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>edu.school21.app.App</mainClass>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.4.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <includeScope>compile</includeScope>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-native-libs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/native</directory>
                                    <includes>
                                        <include>*.so</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <version>3.0.0-M5</version>-->
<!--                <configuration>-->
<!--                    <additionalClasspathElements>-->
<!--                        <additionalClasspathElement>${project.build.directory}/native</additionalClasspathElement>-->
<!--                    </additionalClasspathElements>-->
<!--                </configuration>-->
<!--            </plugin>-->

<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>3.0.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>run</id>-->
<!--                        <phase>exec</phase>-->
<!--                        <goals>-->
<!--                            <goal>java</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <mainClass>your.main.Class</mainClass>-->
<!--                            <systemProperties>-->
<!--                                <property>-->
<!--                                    <name>java.library.path</name>-->
<!--                                    <value>${project.build.directory}/native</value>-->
<!--                                </property>-->
<!--                            </systemProperties>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--                    <plugin>-->
<!--                        <groupId>org.codehaus.mojo</groupId>-->
<!--                        <artifactId>exec-maven-plugin</artifactId>-->
<!--                        <version>3.0.0</version>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>compile-native</id>-->
<!--                                <phase>compile</phase>-->
<!--                                <goals>-->
<!--                                    <goal>exec</goal>-->
<!--                                </goals>-->
<!--                                <configuration>-->
<!--                                    <executable>g++</executable> &lt;!&ndash; Используйте g++ для компиляции C++ кода &ndash;&gt;-->
<!--                                    <arguments>-->
<!--                                        <argument>-shared</argument>-->
<!--                                        <argument>-fPIC</argument>-->
<!--                                        <argument>-o</argument>-->
<!--                                        <argument>${project.build.directory}/libNativeLib.so</argument> &lt;!&ndash; Путь к выходной библиотеке &ndash;&gt;-->
<!--                                        <argument>src/main/native/TestClass.cpp</argument> &lt;!&ndash; Путь к исходному файлу C++ &ndash;&gt;-->
<!--&lt;!&ndash;                                        <argument>-I${env.JAVA_HOME}/include</argument>&ndash;&gt;-->
<!--&lt;!&ndash;                                        <argument>-I${env.JAVA_HOME}/include/linux</argument>&ndash;&gt;-->
<!--                                        <argument>-I${java.home}/include</argument>-->
<!--                                        <argument>-I${java.home}/include/linux</argument>-->
<!--                                    </arguments>-->
<!--                                </configuration>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>build-linux</id>

            <activation>
                <os><family>linux</family></os>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Build Native Linux App</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>./build_app_linux.sh</executable>
                            <environmentVariables>
                                <APP_VERSION>
                                    ${client.version}
                                </APP_VERSION>
                                <PROJECT_VERSION>
                                    ${project.version}
                                </PROJECT_VERSION>
                            </environmentVariables>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>